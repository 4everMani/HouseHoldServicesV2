version: '3.4'

services:
  servicecatalogdb:
    image: mongo

  cartdb:
    image: redis:alpine

  rabbitmq:
    image: rabbitmq:3-management-alpine

  portainer:
    image: portainer/portainer-ce

  servicecatalog.api:
    image: ${DOCKER_REGISTRY-}servicecatalogapi
    build:
      context: .
      dockerfile: Services/ServiceCatalog/ServiceCatalog.API/Dockerfile

  cart.api:
    image: ${DOCKER_REGISTRY-}cartapi
    build:
      context: .
      dockerfile: Services/Cart/Cart.API/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Order/Order.API/Dockerfile

  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile  

  consul-server:
    image: hashicorp/consul:1.10.0
    container_name: consul-server
    restart: always
    hostname: service-registry
    volumes:
     - ./ApiGateways/OcelotApiGw/consul/server.json:/consul/config/server.json:ro
    networks:
      - consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -bootstrap-expect=3"

  consul-client:
    image: hashicorp/consul:1.10.0
    container_name: consul-client
    restart: always
    volumes:
     - ./ApiGateways/OcelotApiGw/consul/client.json:/consul/config/client.json:ro
    networks:
      - consul
    command: "agent -bootstrap-expect=3"

volumes:
  mongo_data:
  portainer_data:

networks:
  consul:
    driver: bridge
